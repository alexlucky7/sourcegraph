#!/usr/bin/env bash

# shellcheck disable=SC1090
source "$HOME/.profile"

# Fetch the latest origin/master to accurately determine the set of changed
# files on this branch.
echo "Running git fetch..."
git fetch
echo "Running git fetch... done"

echo "install asdf awscli"
asdf install awscli
echo "done installing"

# Link the trace-script so we can have pretty steps in the buildkite ui
ln -s "$(pwd)/enterprise/dev/ci/scripts/trace-command.sh" tr 2>/dev/null || true

# set the buildkite cache access keys
AWS_CONFIG_DIR_PATH="/buildkite/.aws"
mkdir -p "$AWS_CONFIG_DIR_PATH"
AWS_CONFIG_FILE="$AWS_CONFIG_DIR_PATH/config"
export AWS_CONFIG_FILE
AWS_SHARED_CREDENTIALS_FILE="/buildkite/.aws/credentials"
export AWS_SHARED_CREDENTIALS_FILE
aws configure set aws_access_key_id "$BUILDKITE_HMAC_KEY" --profile buildkite
aws configure set aws_secret_access_key "$BUILDKITE_HMAC_SECRET" --profile buildkite

# Skip on normal queues because standard agents do not have fresh asdf installs
if [ "$BUILDKITE_AGENT_META_DATA_QUEUE" = "standard,default" ]; then 
  exit 0
fi

asdf_checksum=$(sha1sum .tool-versions | awk '{print $1}')
cache_file="cache-asdf-$asdf_checksum.tar.gz"
cache_key="$BUILDKITE_ORGANIZATION_SLUG/$BUILDKITE_PIPELINE_NAME/$cache_file"

set -x
if aws s3api head-object --bucket "sourcegraph_buildkite_cache" --profile buildkite --endpoint-url 'https://storage.googleapis.com' --region "us-central1" --key "$cache_key"; then
  set -e
  echo -e "ASDF ðŸ”¥ Cache hit: $cache_key"
  aws s3 cp --profile buildkite --endpoint-url 'https://storage.googleapis.com' --region "us-central1" "s3://sourcegraph_buildkite_cache/$cache_key" "$HOME/"
  pushd "$HOME"
  tar xzf "$cache_file"
  popd
else
  set -e
  echo "--- installing all asdf tool versions"
  asdf install
  echo "--- caching asdf installation"
  pushd "$HOME"
  tar cfz "$cache_file" .asdf
  popd
  aws s3 cp --profile buildkite --endpoint-url 'https://storage.googleapis.com' --region "us-central1" "$HOME/$cache_file" "s3://sourcegraph_buildkite_cache/$cache_key" 
fi

unset AWS_SHARED_CREDENTIALS_FILE
unset AWS_CONFIG_FILE
